# -*- coding: utf-8 -*-
##############################################################################
#
#    OpenERP, Open Source Management Solution
#    Copyright (C) 2004-2010 Tiny SPRL (<http://tiny.be>).
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##############################################################################
# Generated by the OpenERP plugin for Dia !
from osv import fields,osv

class for_pis_acsea_certificaciones_maestros(osv.osv):
    """Registro de Procesos de Generación de Certificados a Facilitadores"""
    _name = 'for.pis.acsea_certificaciones_maestros'
    _rec_name = 'codigo'
    _columns = {
        'codigo': fields.char('Código', size=9, required=True, help='Código de Identificación del Proceso (Lote) de Certificados a Facilitadores'),
        'estado_id': fields.many2one('for.pis.estados', 'Estado', help='Estado en en cual trabajó el Facilitador al cual se le emite certificado'),
        'pis_inicio': fields.datetime('Inicio de la Formación', required=True, help='Fecha desde la cual se tomará la creación de certificados'),
        'pis_cierre': fields.datetime('Cierre de la Formación', required=True, help='Fecha hasta la cual se tomará la creación de certificados'),
        'fecha_generacion': fields.datetime('Fecha Generación', required=True, help='Fecha en la cual se genera el lote de Certificados para los valores (estado, cfs, fechas) establecidos'),
        'saber': fields.char('Saber', size=40, required=True, help='Texto al frente del Certificado, que indica el Saber que se acredita y certifica'),
        'lugar_fecha': fields.char('Lugar y Fecha', size=60, help='Texto que indica el Lugar y Fecha que será impreso al frente del Certificado'),
        'firmante_1': fields.char('Firmante 1', size=60, required=True, help='Texto que identificará al primer Firmante en la sección inferior de los Certifcados (Firmas y Sellos)'),
        'firmante_2': fields.char('Firmante 2', size=60, required=True, help='Texto que identificará al segundo Firmante en la sección inferior de los Certifcados (Firmas y Sellos)'),
        'observaciones': fields.text('Observaciones', required=False, help='Observaciones, Comentarios y otras informaciones complementarias y/o descriptivas del Proceso de Generación por Lotes de Certificados'),
        'certificados_ids': fields.one2many('for.pis.acsea_certificados_maestros', 'proceso_id', 'Certificados', help='Relación de Certificados correspondientes (generados) al (éste) Proceso de Certificación'),
    }
for_pis_acsea_certificaciones_maestros()

class for_pis_acsea_estados_ine(osv.osv):
    """Tabla Descriptiva de Estados según el Instituto Nacional de Estadística"""
    _name = 'for.pis.acsea_estados_ine'
    _rec_name = 'estado'
    _columns = {
        'codigo': fields.char('Código INE', size=2, required=True, help='Código del Estado (según el INE)'),
        'codigo_sisr': fields.many2one('for.pis.estados', 'Código SISR', required=True, help='Código del Estado (en SISR)'),
        'estado': fields.related('codigo_sisr', 'estado', type='char', relation='for_pis_estados', string='Estado', store=False, help='Nombre del Estado de Venezuela'),
    }
for_pis_acsea_estados_ine()

class for_pis_acsea_certificados_maestros(osv.osv):
    """Registro Maestro de los Certificados Emitidos a Facilitadores. Cumple las funciones del Libro/Acta de Certificación"""
    _name = 'for.pis.acsea_certificados_maestros'
    _rec_name = 'correlativo'
    _columns = {
        'proceso_id': fields.many2one('for.pis.acsea_certificaciones_maestros', 'Proceso', help='Proceso ACSEA en el cual se generaron los certificados de Facilitadores de este lote'),
        'correlativo': fields.char('Correlativo', size=17, required=True, help='Código de Identificación del Certificado'),
        'estado_id': fields.many2one('for.pis.estados', 'Estado', required=True, help='Estado donde laboro el Facilitador (correspondiente a la Gerencia Regional a la cual presta Servicios)'),
        'estado': fields.related('estado_id', 'estado', type='char', relation='for_pis_estados', string='Estado', store=False, help='Nombre del Estado de Venezuela'),
        'maestro_id': fields.many2one('for.pis.maestros', 'Facilitador', required=True, help='Facilitador al cual se le genera el Certificado'),
        #se recomienda borrar estos campos siguientes y agregar _rec_name a la clase de las que provienen
        'cedula': fields.related('maestro_id', 'cedula', type='char', relation='for_pis_maestros', string='Cedula', store=False, help='Cédula del Facilitador'),
        'nombres': fields.related('maestro_id', 'nombres', type='char', relation='for_pis_maestros', string='Nombres', store=False, help='Nombres del Facilitador'),
        'apellidos': fields.related('maestro_id', 'apellidos', type='char', relation='for_pis_maestros', string='Apellidos', store=False, help='Apellidos del Facilitador'),
        ##################################################################################################
        'libro': fields.integer('Libro', required=True, help='Número de Libro de Entrega donde está relacionado el Consecutivo del Certificado'),
        'hoja': fields.integer('Hoja (Folio)', required=True, help='Número de Folio (Hoja) del Libro de Entrega donde está relacionado el Consecutivo del Certificado'),
        'consecutivo': fields.integer('Consecutivo', required=True, help='Número de (Línea) que el Certificado tiene, en el Folio (Hoja) del Libro de Entrega'),
        'pis_participa': fields.char('Formación Participa', size=120, required=True, help='Lista de Códigos de las Formaciones donde Participa)'),
        'duracion': fields.integer('Duración', required=True, help='Cantidad de Tiempo, expresado en horas, de experiencias del Facilitador en el Saber referido por el Certificado, que son acreditadas a través del mismo'),
        'fecha_emision': fields.char('Fecha de Emisión', size=10, required=True, help='Fecha de Emisión (Impresión) del Cartón por parte del INCES (no la del Acto de Consignación al Facilitador)'),
        'fecha_consignacion': fields.datetime('Fecha de Consignación', required=False, help='Fecha de Entrega del Certificado al Facilitador. Momento en el cual, el Facilitador firma el Acta/Libro de Entrega, en confirmación de recepción física del cartón'),
        'estatus_certificado': fields.many2one('for.pis.acsea_certificados_estatus', 'Estatus', required=True),
    }
for_pis_acsea_certificados_maestros()

class for_pis_acsea_certificados_estatus(osv.osv):
    """Tabla Descriptiva de los Estatus que adoptan los Certificados (Generado, Impreso, Distribuido, Consignado, Anulado)"""
    _name = 'for.pis.acsea_certificados_estatus'
    _rec_name = 'estado'
    _columns = {
        'codigo': fields.char('Código', size=3, required=True, help='Código de Identificación del Estatus del Certificado'),
        'estado': fields.char('Estatus', size=60, stored=False, help='Nombre del Estatus del Certificado'),
    }
for_pis_acsea_certificados_estatus()

